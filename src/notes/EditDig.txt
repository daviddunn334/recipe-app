import React, { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import supabase from "../supabase";

const EditDig = () => {
  const { id } = useParams(); // Ensure param name matches in route
  const navigate = useNavigate();
  
  const [dig, setDig] = useState(null);
  const [projectName, setProjectName] = useState("");
  const [digNumber, setDigNumber] = useState("");
  const [location, setLocation] = useState("");
  const [date, setDate] = useState("");
  const [error, setError] = useState("");

  // Fetch dig details
  useEffect(() => {
    const fetchDig = async () => {
      const { data, error } = await supabase.from("digs").select("*").eq("id", id).single();

      if (error) {
        console.error("Error fetching dig:", error);
      } else {
        setDig(data);
        setProjectName(data.project_name);
        setDigNumber(data.dig_number);
        setLocation(data.location || "");
        setDate(data.created_at ? data.created_at.split("T")[0] : "");
      }
    };

    fetchDig();
  }, [id]);

  // Update Dig
  const handleUpdate = async () => {
    const { error } = await supabase.from("digs").update({
      project_name: projectName,
      dig_number: digNumber,
      location: location,
      created_at: date,
    }).eq("id", id);

    if (error) {
      setError(`Error updating dig: ${error.message}`);
    } else {
      alert("Dig updated successfully!");
      navigate("/reporting"); // Redirect back to reporting page
    }
  };

  if (!dig) return <p className="text-gray-600">Loading...</p>;

  return (
    <div className="max-w-lg mx-auto p-6 bg-base-100 shadow-lg rounded">
      <h1 className="text-2xl font-bold text-primary mb-4">Edit Dig</h1>
      {error && <p className="text-red-500">{error}</p>}

      <div className="mb-4">
        <label className="label">Project Name</label>
        <input
          type="text"
          value={projectName}
          onChange={(e) => setProjectName(e.target.value)}
          className="input input-bordered w-full"
        />
      </div>

      <div className="mb-4">
        <label className="label">Dig Number</label>
        <input
          type="text"
          value={digNumber}
          onChange={(e) => setDigNumber(e.target.value)}
          className="input input-bordered w-full"
        />
      </div>

      <div className="mb-4">
        <label className="label">Location</label>
        <input
          type="text"
          value={location}
          onChange={(e) => setLocation(e.target.value)}
          className="input input-bordered w-full"
        />
      </div>

      <div className="mb-4">
        <label className="label">Date</label>
        <input
          type="date"
          value={date}
          onChange={(e) => setDate(e.target.value)}
          className="input input-bordered w-full"
        />
      </div>

      <div className="flex justify-between mt-4">
        <button onClick={handleUpdate} className="btn btn-primary">Save Changes</button>
        <button onClick={() => navigate("/reporting")} className="btn btn-secondary">Cancel</button>
      </div>
    </div>
  );
};

export default EditDig;
